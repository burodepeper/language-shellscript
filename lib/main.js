// Generated by CoffeeScript 1.10.0
(function() {
  var CSON, fs, path;

  CSON = require('season');

  path = require('path');

  fs = require('fs');

  module.exports = {
    compileGrammar: function() {
      var directory, entries, entry, filepath, grammar, i, input, key, len, output, patterns, ref;
      if (atom.inDevMode()) {
        input = '../grammars/repositories/shell.cson';
        output = '../grammars/shell-unix-bash.cson';
        filepath = path.join(__dirname, input);
        grammar = CSON.readFileSync(filepath);
        directory = new Directory(path.join(__dirname, '../grammars/repositories/'));
        entries = directory.getEntriesSync();
        console.log(entries);
        for (i = 0, len = entries.length; i < len; i++) {
          entry = entries[i];
          ref = CSON.readFileSync(entry.path), key = ref.key, patterns = ref.patterns;
          console.log(key);
          if (key && patterns) {
            grammar.repository[key] = {
              patterns: patterns
            };
          }
          filepath = path.join(__dirname, output);
          CSON.writeFileSync(filepath, grammar, (function() {
            return atom.commands.dispatch('body', 'window:reload');
          })());
        }
      }
      return patterns;
    }
  };

}).call(this);
